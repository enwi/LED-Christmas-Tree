# This is the name of the workflow, visible on GitHub UI.
name: release

# Here we tell GitHub to run the workflow when a commit
# is pushed to a version tag.
on:
  push:
    tags:
      - '*.*.*'

# This is the list of jobs that will be run concurrently.
# Since we use a build matrix, the actual number of jobs
# started depends on how many configurations the matrix
# will produce.
jobs:
  # This is the name of the job - can be whatever.
  build:

    # This is the platform GitHub will use to run our workflow, we
    # pick Windows for no particular reason.
    runs-on: windows-latest

    # Make sure Arduino CLI allows to install libraries with --git-url
    env:
          ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL: true

    # This is the list of steps this job will run.
    steps:

      # First of all, we clone the repo using the `checkout` action.
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      # We use the `arduino/setup-arduino-cli` action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          arduino-cli core update-index --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli core install esp8266:esp8266@2.7.4 --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli lib install ArduinoJson
          arduino-cli lib install FastLED
          arduino-cli lib install AceButton
          arduino-cli lib install --git-url https://github.com/me-no-dev/ESPAsyncTCP.git
          arduino-cli lib install --git-url https://github.com/me-no-dev/ESPAsyncWebServer.git
      
      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: arduino-cli compile --fqbn "esp8266:esp8266:d1_mini:xtal=160,vt=flash,exception=legacy,ssl=all,eesz=4M2M,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=921600" --export-binaries ./code
      
      # After compilation we can release with binary files
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: code/build/esp8266.esp8266.d1_mini/code.ino.bin