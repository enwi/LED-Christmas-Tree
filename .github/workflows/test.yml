# Workflow name, visible on GitHub UI.
name: test

# Run the workflow when a commit is pushed or a Pull Request is opened
on: 
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*.*'
  pull_request:

# List of jobs that will be run concurrently
jobs:
  # Name of the job
  test:

    # Platform GitHub will use to run workflow, we pick Windows for no particular reason
    runs-on: windows-latest

    # Make sure Arduino CLI allows to install libraries with --git-url
    env:
          ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL: true

    # List of steps this job will run
    steps:

      # Clone the repo using the `checkout` action
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      # Install and configure Arduino CLI
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      # Install the platform and dependencies
      - name: Install platform
        run: |
          arduino-cli core update-index --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli core install esp8266:esp8266@2.7.4 --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli lib install ArduinoJson
          arduino-cli lib install FastLED
          arduino-cli lib install AceButton
          arduino-cli lib install --git-url https://github.com/me-no-dev/ESPAsyncTCP.git
          arduino-cli lib install --git-url https://github.com/me-no-dev/ESPAsyncWebServer.git
      
      # Compile the sketch
      - name: Compile Sketch
        run: |
          arduino-cli compile --fqbn "esp8266:esp8266:d1_mini:xtal=160,vt=flash,exception=legacy,ssl=all,eesz=4M2M,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=921600" --export-binaries ./code
      
      # Upload binary files as artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: code/build/esp8266.esp8266.d1_mini/code.ino.bin
